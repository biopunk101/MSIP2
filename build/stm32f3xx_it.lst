ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****  ******************************************************************************
   4:Src/stm32f3xx_it.c ****  * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****  ******************************************************************************
   7:Src/stm32f3xx_it.c ****  * @attention
   8:Src/stm32f3xx_it.c ****  *
   9:Src/stm32f3xx_it.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****  * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****  *
  12:Src/stm32f3xx_it.c ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f3xx_it.c ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f3xx_it.c ****  * the License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****  *                             www.st.com/SLA0044
  16:Src/stm32f3xx_it.c ****  *
  17:Src/stm32f3xx_it.c ****  ******************************************************************************
  18:Src/stm32f3xx_it.c ****  */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** #include "led.h"
  25:Src/stm32f3xx_it.c **** #include <string.h>
  26:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f3xx_it.c **** 
  30:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f3xx_it.c **** 
  35:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f3xx_it.c **** #define SampleRate 10
  38:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f3xx_it.c **** uint8_t ABuf[64] = {0x00};
  48:Src/stm32f3xx_it.c **** uint8_t BBuf[64] = {0x00};
  49:Src/stm32f3xx_it.c **** uint8_t NextBuf = 0;
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** uint32_t SignalAvg = 0;
  52:Src/stm32f3xx_it.c **** uint32_t SignalL = 0, signalR = 0;
  53:Src/stm32f3xx_it.c **** 
  54:Src/stm32f3xx_it.c **** uint8_t skip = 0;
  55:Src/stm32f3xx_it.c **** uint8_t t4tick = 0;
  56:Src/stm32f3xx_it.c **** uint8_t txidx = 0;
  57:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  58:Src/stm32f3xx_it.c **** 
  59:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  60:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  61:Src/stm32f3xx_it.c **** 
  62:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  65:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  66:Src/stm32f3xx_it.c **** // extern uint8_t SignalTmp[96];
  67:Src/stm32f3xx_it.c **** extern uint32_t SignalVal;
  68:Src/stm32f3xx_it.c **** extern uint16_t DMABufSize;
  69:Src/stm32f3xx_it.c **** 
  70:Src/stm32f3xx_it.c **** extern uint8_t JP2_MODE, JP1_MODE;
  71:Src/stm32f3xx_it.c **** extern uint16_t ADC_Values[4];
  72:Src/stm32f3xx_it.c **** uint8_t t2cnt = 0;
  73:Src/stm32f3xx_it.c **** uint16_t val = 0;
  74:Src/stm32f3xx_it.c **** uint8_t up = 0;
  75:Src/stm32f3xx_it.c **** uint16_t cdctick = 0;
  76:Src/stm32f3xx_it.c **** extern uint8_t TX_Flag;
  77:Src/stm32f3xx_it.c **** extern uint8_t FLAG_half, FLAG_comp;
  78:Src/stm32f3xx_it.c **** extern uint32_t lSample, rSample;
  79:Src/stm32f3xx_it.c **** /*
  80:Src/stm32f3xx_it.c **** extern uint8_t TransferFlag;
  81:Src/stm32f3xx_it.c **** extern uint32_t SignalTmp[16];
  82:Src/stm32f3xx_it.c **** extern uint8_t BufSize;
  83:Src/stm32f3xx_it.c **** */
  84:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  85:Src/stm32f3xx_it.c **** 
  86:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  87:Src/stm32f3xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 3


  88:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_rx;
  89:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  90:Src/stm32f3xx_it.c **** extern I2S_HandleTypeDef hi2s2;
  91:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  92:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  93:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim4;
  94:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  95:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  98:Src/stm32f3xx_it.c **** 
  99:Src/stm32f3xx_it.c **** /******************************************************************************/
 100:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
 101:Src/stm32f3xx_it.c **** /******************************************************************************/
 102:Src/stm32f3xx_it.c **** /**
 103:Src/stm32f3xx_it.c ****  * @brief This function handles Non maskable interrupt.
 104:Src/stm32f3xx_it.c ****  */
 105:Src/stm32f3xx_it.c **** void NMI_Handler(void)
 106:Src/stm32f3xx_it.c **** {
  29              		.loc 1 106 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 107:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
 108:Src/stm32f3xx_it.c **** 
 109:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
 110:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
 111:Src/stm32f3xx_it.c **** 
 112:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 113:Src/stm32f3xx_it.c **** }
  34              		.loc 1 113 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE126:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB127:
 114:Src/stm32f3xx_it.c **** 
 115:Src/stm32f3xx_it.c **** /**
 116:Src/stm32f3xx_it.c ****  * @brief This function handles Hard fault interrupt.
 117:Src/stm32f3xx_it.c ****  */
 118:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
 119:Src/stm32f3xx_it.c **** {
  49              		.loc 1 119 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 4


 120:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 121:Src/stm32f3xx_it.c **** 
 122:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 123:Src/stm32f3xx_it.c ****   while (1)
  56              		.loc 1 123 3 discriminator 1 view .LVU3
 124:Src/stm32f3xx_it.c ****   {
 125:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 126:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 127:Src/stm32f3xx_it.c ****   }
  57              		.loc 1 127 3 discriminator 1 view .LVU4
 123:Src/stm32f3xx_it.c ****   {
  58              		.loc 1 123 9 discriminator 1 view .LVU5
  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE127:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB128:
 128:Src/stm32f3xx_it.c **** }
 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c **** /**
 131:Src/stm32f3xx_it.c ****  * @brief This function handles Memory management fault.
 132:Src/stm32f3xx_it.c ****  */
 133:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 134:Src/stm32f3xx_it.c **** {
  73              		.loc 1 134 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 135:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 136:Src/stm32f3xx_it.c **** 
 137:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 138:Src/stm32f3xx_it.c ****   while (1)
  80              		.loc 1 138 3 discriminator 1 view .LVU7
 139:Src/stm32f3xx_it.c ****   {
 140:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 141:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 142:Src/stm32f3xx_it.c ****   }
  81              		.loc 1 142 3 discriminator 1 view .LVU8
 138:Src/stm32f3xx_it.c ****   {
  82              		.loc 1 138 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE128:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 5


  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB129:
 143:Src/stm32f3xx_it.c **** }
 144:Src/stm32f3xx_it.c **** 
 145:Src/stm32f3xx_it.c **** /**
 146:Src/stm32f3xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
 147:Src/stm32f3xx_it.c ****  */
 148:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 149:Src/stm32f3xx_it.c **** {
  97              		.loc 1 149 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 150:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 151:Src/stm32f3xx_it.c **** 
 152:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 153:Src/stm32f3xx_it.c ****   while (1)
 104              		.loc 1 153 3 discriminator 1 view .LVU11
 154:Src/stm32f3xx_it.c ****   {
 155:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 156:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 157:Src/stm32f3xx_it.c ****   }
 105              		.loc 1 157 3 discriminator 1 view .LVU12
 153:Src/stm32f3xx_it.c ****   {
 106              		.loc 1 153 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE129:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB130:
 158:Src/stm32f3xx_it.c **** }
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c **** /**
 161:Src/stm32f3xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 162:Src/stm32f3xx_it.c ****  */
 163:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 164:Src/stm32f3xx_it.c **** {
 121              		.loc 1 164 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 6


 165:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 166:Src/stm32f3xx_it.c **** 
 167:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 168:Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 168 3 discriminator 1 view .LVU15
 169:Src/stm32f3xx_it.c ****   {
 170:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 171:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 172:Src/stm32f3xx_it.c ****   }
 129              		.loc 1 172 3 discriminator 1 view .LVU16
 168:Src/stm32f3xx_it.c ****   {
 130              		.loc 1 168 9 discriminator 1 view .LVU17
 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE130:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB131:
 173:Src/stm32f3xx_it.c **** }
 174:Src/stm32f3xx_it.c **** 
 175:Src/stm32f3xx_it.c **** /**
 176:Src/stm32f3xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 177:Src/stm32f3xx_it.c ****  */
 178:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 179:Src/stm32f3xx_it.c **** {
 145              		.loc 1 179 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 180:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 181:Src/stm32f3xx_it.c **** 
 182:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 183:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 184:Src/stm32f3xx_it.c **** 
 185:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 186:Src/stm32f3xx_it.c **** }
 150              		.loc 1 186 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE131:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB132:
 187:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 7


 188:Src/stm32f3xx_it.c **** /**
 189:Src/stm32f3xx_it.c ****  * @brief This function handles Debug monitor.
 190:Src/stm32f3xx_it.c ****  */
 191:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 192:Src/stm32f3xx_it.c **** {
 165              		.loc 1 192 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 193:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 194:Src/stm32f3xx_it.c **** 
 195:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 196:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 197:Src/stm32f3xx_it.c **** 
 198:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 199:Src/stm32f3xx_it.c **** }
 170              		.loc 1 199 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE132:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB133:
 200:Src/stm32f3xx_it.c **** 
 201:Src/stm32f3xx_it.c **** /**
 202:Src/stm32f3xx_it.c ****  * @brief This function handles Pendable request for system service.
 203:Src/stm32f3xx_it.c ****  */
 204:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 205:Src/stm32f3xx_it.c **** {
 185              		.loc 1 205 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 206:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 207:Src/stm32f3xx_it.c **** 
 208:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 209:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 210:Src/stm32f3xx_it.c **** 
 211:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 212:Src/stm32f3xx_it.c **** }
 190              		.loc 1 212 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE133:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 8


 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB134:
 213:Src/stm32f3xx_it.c **** 
 214:Src/stm32f3xx_it.c **** /**
 215:Src/stm32f3xx_it.c ****  * @brief This function handles System tick timer.
 216:Src/stm32f3xx_it.c ****  */
 217:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 218:Src/stm32f3xx_it.c **** {
 205              		.loc 1 218 1 view -0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 219:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 220:Src/stm32f3xx_it.c **** 
 221:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 222:Src/stm32f3xx_it.c ****   HAL_IncTick();
 214              		.loc 1 222 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 223:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 226:Src/stm32f3xx_it.c **** }
 217              		.loc 1 226 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE134:
 222              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Channel4_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	DMA1_Channel4_IRQHandler:
 231              	.LFB135:
 227:Src/stm32f3xx_it.c **** 
 228:Src/stm32f3xx_it.c **** /******************************************************************************/
 229:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 230:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 231:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 232:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 233:Src/stm32f3xx_it.c **** /******************************************************************************/
 234:Src/stm32f3xx_it.c **** 
 235:Src/stm32f3xx_it.c **** /**
 236:Src/stm32f3xx_it.c ****  * @brief This function handles DMA1 channel4 global interrupt.
 237:Src/stm32f3xx_it.c ****  */
 238:Src/stm32f3xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 239:Src/stm32f3xx_it.c **** {
 232              		.loc 1 239 1 is_stmt 1 view -0
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 9


 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 240:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 241:Src/stm32f3xx_it.c **** 
 242:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 243:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_rx);
 241              		.loc 1 243 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 244              	.LVL1:
 244:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 245:Src/stm32f3xx_it.c **** 
 246:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 247:Src/stm32f3xx_it.c **** }
 245              		.loc 1 247 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hdma_spi2_rx
 251              		.cfi_endproc
 252              	.LFE135:
 254              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	DMA1_Channel5_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	DMA1_Channel5_IRQHandler:
 263              	.LFB136:
 248:Src/stm32f3xx_it.c **** 
 249:Src/stm32f3xx_it.c **** /**
 250:Src/stm32f3xx_it.c ****  * @brief This function handles DMA1 channel5 global interrupt.
 251:Src/stm32f3xx_it.c ****  */
 252:Src/stm32f3xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 253:Src/stm32f3xx_it.c **** {
 264              		.loc 1 253 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 254:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 255:Src/stm32f3xx_it.c **** 
 256:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 257:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 273              		.loc 1 257 3 view .LVU31
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 10


 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 276              	.LVL2:
 258:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 259:Src/stm32f3xx_it.c **** 
 260:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 261:Src/stm32f3xx_it.c **** }
 277              		.loc 1 261 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
 282 000c 00000000 		.word	hdma_spi2_tx
 283              		.cfi_endproc
 284              	.LFE136:
 286              		.section	.text.USB_HP_CAN_TX_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	USB_HP_CAN_TX_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	USB_HP_CAN_TX_IRQHandler:
 295              	.LFB137:
 262:Src/stm32f3xx_it.c **** 
 263:Src/stm32f3xx_it.c **** /**
 264:Src/stm32f3xx_it.c ****  * @brief This function handles USB high priority or CAN_TX interrupts.
 265:Src/stm32f3xx_it.c ****  */
 266:Src/stm32f3xx_it.c **** void USB_HP_CAN_TX_IRQHandler(void)
 267:Src/stm32f3xx_it.c **** {
 296              		.loc 1 267 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 268:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN_TX_IRQn 0 */
 269:Src/stm32f3xx_it.c **** 
 270:Src/stm32f3xx_it.c ****   /* USER CODE END USB_HP_CAN_TX_IRQn 0 */
 271:Src/stm32f3xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 305              		.loc 1 271 3 view .LVU34
 306 0002 0248     		ldr	r0, .L25
 307 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 308              	.LVL3:
 272:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN_TX_IRQn 1 */
 273:Src/stm32f3xx_it.c **** 
 274:Src/stm32f3xx_it.c ****   /* USER CODE END USB_HP_CAN_TX_IRQn 1 */
 275:Src/stm32f3xx_it.c **** }
 309              		.loc 1 275 1 is_stmt 0 view .LVU35
 310 0008 08BD     		pop	{r3, pc}
 311              	.L26:
 312 000a 00BF     		.align	2
 313              	.L25:
 314 000c 00000000 		.word	hpcd_USB_FS
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 11


 315              		.cfi_endproc
 316              	.LFE137:
 318              		.section	.text.USB_LP_CAN_RX0_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	USB_LP_CAN_RX0_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	USB_LP_CAN_RX0_IRQHandler:
 327              	.LFB138:
 276:Src/stm32f3xx_it.c **** 
 277:Src/stm32f3xx_it.c **** /**
 278:Src/stm32f3xx_it.c ****  * @brief This function handles USB low priority or CAN_RX0 interrupts.
 279:Src/stm32f3xx_it.c ****  */
 280:Src/stm32f3xx_it.c **** void USB_LP_CAN_RX0_IRQHandler(void)
 281:Src/stm32f3xx_it.c **** {
 328              		.loc 1 281 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 282:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN_RX0_IRQn 0 */
 283:Src/stm32f3xx_it.c **** 
 284:Src/stm32f3xx_it.c ****   /* USER CODE END USB_LP_CAN_RX0_IRQn 0 */
 285:Src/stm32f3xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 337              		.loc 1 285 3 view .LVU37
 338 0002 0248     		ldr	r0, .L29
 339 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 340              	.LVL4:
 286:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN_RX0_IRQn 1 */
 287:Src/stm32f3xx_it.c **** 
 288:Src/stm32f3xx_it.c ****   /* USER CODE END USB_LP_CAN_RX0_IRQn 1 */
 289:Src/stm32f3xx_it.c **** }
 341              		.loc 1 289 1 is_stmt 0 view .LVU38
 342 0008 08BD     		pop	{r3, pc}
 343              	.L30:
 344 000a 00BF     		.align	2
 345              	.L29:
 346 000c 00000000 		.word	hpcd_USB_FS
 347              		.cfi_endproc
 348              	.LFE138:
 350              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	TIM2_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	TIM2_IRQHandler:
 359              	.LFB139:
 290:Src/stm32f3xx_it.c **** 
 291:Src/stm32f3xx_it.c **** /**
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 12


 292:Src/stm32f3xx_it.c ****  * @brief
 293:Src/stm32f3xx_it.c ****  *
 294:Src/stm32f3xx_it.c ****  */
 295:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 296:Src/stm32f3xx_it.c **** {
 360              		.loc 1 296 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
 297:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 298:Src/stm32f3xx_it.c ****   if (TX_Flag)
 369              		.loc 1 298 3 view .LVU40
 370              		.loc 1 298 7 is_stmt 0 view .LVU41
 371 0002 0B4B     		ldr	r3, .L36
 372 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373              		.loc 1 298 6 view .LVU42
 374 0006 4BB1     		cbz	r3, .L32
 299:Src/stm32f3xx_it.c ****   {
 300:Src/stm32f3xx_it.c ****     if (NextBuf)
 375              		.loc 1 300 5 is_stmt 1 view .LVU43
 376              		.loc 1 300 9 is_stmt 0 view .LVU44
 377 0008 0A4B     		ldr	r3, .L36+4
 378 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379              		.loc 1 300 8 view .LVU45
 380 000c 53B1     		cbz	r3, .L33
 381              	.LBB2:
 301:Src/stm32f3xx_it.c ****       CDC_Transmit_FS(&ABuf, 64);
 382              		.loc 1 301 7 is_stmt 1 view .LVU46
 383 000e 4021     		movs	r1, #64
 384 0010 0948     		ldr	r0, .L36+8
 385 0012 FFF7FEFF 		bl	CDC_Transmit_FS
 386              	.LVL5:
 387              	.L34:
 388              	.LBE2:
 302:Src/stm32f3xx_it.c ****     else
 303:Src/stm32f3xx_it.c ****       CDC_Transmit_FS(&BBuf, 64);
 304:Src/stm32f3xx_it.c **** 
 305:Src/stm32f3xx_it.c ****     TX_Flag = 0;
 389              		.loc 1 305 5 view .LVU47
 390              		.loc 1 305 13 is_stmt 0 view .LVU48
 391 0016 064B     		ldr	r3, .L36
 392 0018 0022     		movs	r2, #0
 393 001a 1A70     		strb	r2, [r3]
 394              	.L32:
 306:Src/stm32f3xx_it.c ****   }
 307:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 308:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 395              		.loc 1 308 3 is_stmt 1 view .LVU49
 396 001c 0748     		ldr	r0, .L36+12
 397 001e FFF7FEFF 		bl	HAL_TIM_IRQHandler
 398              	.LVL6:
 309:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 13


 310:Src/stm32f3xx_it.c **** 
 311:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 312:Src/stm32f3xx_it.c **** }
 399              		.loc 1 312 1 is_stmt 0 view .LVU50
 400 0022 08BD     		pop	{r3, pc}
 401              	.L33:
 402              	.LBB3:
 303:Src/stm32f3xx_it.c **** 
 403              		.loc 1 303 7 is_stmt 1 view .LVU51
 404 0024 4021     		movs	r1, #64
 405 0026 0648     		ldr	r0, .L36+16
 406 0028 FFF7FEFF 		bl	CDC_Transmit_FS
 407              	.LVL7:
 408 002c F3E7     		b	.L34
 409              	.L37:
 410 002e 00BF     		.align	2
 411              	.L36:
 412 0030 00000000 		.word	TX_Flag
 413 0034 00000000 		.word	.LANCHOR0
 414 0038 00000000 		.word	.LANCHOR1
 415 003c 00000000 		.word	htim2
 416 0040 00000000 		.word	.LANCHOR2
 417              	.LBE3:
 418              		.cfi_endproc
 419              	.LFE139:
 421              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 422              		.align	1
 423              		.global	TIM3_IRQHandler
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	TIM3_IRQHandler:
 430              	.LFB140:
 313:Src/stm32f3xx_it.c **** 
 314:Src/stm32f3xx_it.c **** /**
 315:Src/stm32f3xx_it.c ****  * @brief This function handles TIM3 global interrupt.
 316:Src/stm32f3xx_it.c ****  */
 317:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 318:Src/stm32f3xx_it.c **** {
 431              		.loc 1 318 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 10B5     		push	{r4, lr}
 436              	.LCFI6:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_offset 4, -8
 439              		.cfi_offset 14, -4
 319:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TIM3_IRQn 0 */
 320:Src/stm32f3xx_it.c **** #if 1
 321:Src/stm32f3xx_it.c ****   // if (!skip)
 322:Src/stm32f3xx_it.c ****   //{
 323:Src/stm32f3xx_it.c **** #ifdef SIMULATOR
 324:Src/stm32f3xx_it.c ****   SignalAvg = GenerateSignal();
 325:Src/stm32f3xx_it.c **** #else
 326:Src/stm32f3xx_it.c ****   if (!NextBuf)
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 14


 440              		.loc 1 326 3 view .LVU53
 441              		.loc 1 326 7 is_stmt 0 view .LVU54
 442 0002 1A4B     		ldr	r3, .L43
 443 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 444              		.loc 1 326 6 view .LVU55
 445 0006 02BB     		cbnz	r2, .L39
 327:Src/stm32f3xx_it.c ****   {
 328:Src/stm32f3xx_it.c ****     memcpy(&ABuf[txidx * 4], &lSample, 4);
 446              		.loc 1 328 5 is_stmt 1 view .LVU56
 447              		.loc 1 328 24 is_stmt 0 view .LVU57
 448 0008 1949     		ldr	r1, .L43+4
 449 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 450              		.loc 1 328 12 view .LVU58
 451 000c 1948     		ldr	r0, .L43+8
 452 000e 1A4C     		ldr	r4, .L43+12
 453 0010 2468     		ldr	r4, [r4]
 454              		.loc 1 328 5 view .LVU59
 455 0012 40F82340 		str	r4, [r0, r3, lsl #2]	@ unaligned
 329:Src/stm32f3xx_it.c ****     txidx++;
 456              		.loc 1 329 5 is_stmt 1 view .LVU60
 457              		.loc 1 329 10 is_stmt 0 view .LVU61
 458 0016 0133     		adds	r3, r3, #1
 459 0018 DBB2     		uxtb	r3, r3
 330:Src/stm32f3xx_it.c ****     memcpy(&ABuf[txidx * 4], &rSample, 4);
 460              		.loc 1 330 5 is_stmt 1 view .LVU62
 461 001a 184C     		ldr	r4, .L43+16
 462 001c 2468     		ldr	r4, [r4]
 463 001e 40F82340 		str	r4, [r0, r3, lsl #2]	@ unaligned
 331:Src/stm32f3xx_it.c ****     txidx++;
 464              		.loc 1 331 5 view .LVU63
 465              		.loc 1 331 10 is_stmt 0 view .LVU64
 466 0022 0133     		adds	r3, r3, #1
 467 0024 0B70     		strb	r3, [r1]
 468              	.L40:
 332:Src/stm32f3xx_it.c ****   }
 333:Src/stm32f3xx_it.c ****   else
 334:Src/stm32f3xx_it.c ****   {
 335:Src/stm32f3xx_it.c ****     memcpy(&BBuf[txidx * 4], &lSample, 4);
 336:Src/stm32f3xx_it.c ****     txidx++;
 337:Src/stm32f3xx_it.c ****     memcpy(&BBuf[txidx * 4], &rSample, 4);
 338:Src/stm32f3xx_it.c ****     txidx++;
 339:Src/stm32f3xx_it.c ****   }
 340:Src/stm32f3xx_it.c **** 
 341:Src/stm32f3xx_it.c ****   if (txidx >= 16)
 469              		.loc 1 341 3 is_stmt 1 view .LVU65
 470              		.loc 1 341 13 is_stmt 0 view .LVU66
 471 0026 124B     		ldr	r3, .L43+4
 472 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 473              		.loc 1 341 6 view .LVU67
 474 002a 0F2B     		cmp	r3, #15
 475 002c 09D9     		bls	.L41
 342:Src/stm32f3xx_it.c ****   {
 343:Src/stm32f3xx_it.c ****     NextBuf ^= 1;
 476              		.loc 1 343 5 is_stmt 1 view .LVU68
 477              		.loc 1 343 13 is_stmt 0 view .LVU69
 478 002e 82F00102 		eor	r2, r2, #1
 479 0032 0E4B     		ldr	r3, .L43
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 15


 480 0034 1A70     		strb	r2, [r3]
 344:Src/stm32f3xx_it.c ****     TX_Flag = 1;
 481              		.loc 1 344 5 is_stmt 1 view .LVU70
 482              		.loc 1 344 13 is_stmt 0 view .LVU71
 483 0036 124B     		ldr	r3, .L43+20
 484 0038 0122     		movs	r2, #1
 485 003a 1A70     		strb	r2, [r3]
 345:Src/stm32f3xx_it.c ****     txidx = 0;
 486              		.loc 1 345 5 is_stmt 1 view .LVU72
 487              		.loc 1 345 11 is_stmt 0 view .LVU73
 488 003c 0C4B     		ldr	r3, .L43+4
 489 003e 0022     		movs	r2, #0
 490 0040 1A70     		strb	r2, [r3]
 491              	.L41:
 346:Src/stm32f3xx_it.c ****   }
 347:Src/stm32f3xx_it.c **** #endif
 348:Src/stm32f3xx_it.c ****   //}
 349:Src/stm32f3xx_it.c ****   // skip ^= 1; // half sampling
 350:Src/stm32f3xx_it.c **** #endif
 351:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 352:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 492              		.loc 1 352 3 is_stmt 1 view .LVU74
 493 0042 1048     		ldr	r0, .L43+24
 494 0044 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 495              	.LVL8:
 353:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 354:Src/stm32f3xx_it.c **** 
 355:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 356:Src/stm32f3xx_it.c **** }
 496              		.loc 1 356 1 is_stmt 0 view .LVU75
 497 0048 10BD     		pop	{r4, pc}
 498              	.L39:
 335:Src/stm32f3xx_it.c ****     txidx++;
 499              		.loc 1 335 5 is_stmt 1 view .LVU76
 335:Src/stm32f3xx_it.c ****     txidx++;
 500              		.loc 1 335 24 is_stmt 0 view .LVU77
 501 004a 0949     		ldr	r1, .L43+4
 502 004c 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 335:Src/stm32f3xx_it.c ****     txidx++;
 503              		.loc 1 335 12 view .LVU78
 504 004e 0E48     		ldr	r0, .L43+28
 505 0050 094C     		ldr	r4, .L43+12
 506 0052 2468     		ldr	r4, [r4]
 335:Src/stm32f3xx_it.c ****     txidx++;
 507              		.loc 1 335 5 view .LVU79
 508 0054 40F82340 		str	r4, [r0, r3, lsl #2]	@ unaligned
 336:Src/stm32f3xx_it.c ****     memcpy(&BBuf[txidx * 4], &rSample, 4);
 509              		.loc 1 336 5 is_stmt 1 view .LVU80
 336:Src/stm32f3xx_it.c ****     memcpy(&BBuf[txidx * 4], &rSample, 4);
 510              		.loc 1 336 10 is_stmt 0 view .LVU81
 511 0058 0133     		adds	r3, r3, #1
 512 005a DBB2     		uxtb	r3, r3
 337:Src/stm32f3xx_it.c ****     txidx++;
 513              		.loc 1 337 5 is_stmt 1 view .LVU82
 514 005c 074C     		ldr	r4, .L43+16
 515 005e 2468     		ldr	r4, [r4]
 516 0060 40F82340 		str	r4, [r0, r3, lsl #2]	@ unaligned
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 16


 338:Src/stm32f3xx_it.c ****   }
 517              		.loc 1 338 5 view .LVU83
 338:Src/stm32f3xx_it.c ****   }
 518              		.loc 1 338 10 is_stmt 0 view .LVU84
 519 0064 0133     		adds	r3, r3, #1
 520 0066 0B70     		strb	r3, [r1]
 521 0068 DDE7     		b	.L40
 522              	.L44:
 523 006a 00BF     		.align	2
 524              	.L43:
 525 006c 00000000 		.word	.LANCHOR0
 526 0070 00000000 		.word	.LANCHOR3
 527 0074 00000000 		.word	.LANCHOR1
 528 0078 00000000 		.word	lSample
 529 007c 00000000 		.word	rSample
 530 0080 00000000 		.word	TX_Flag
 531 0084 00000000 		.word	htim3
 532 0088 00000000 		.word	.LANCHOR2
 533              		.cfi_endproc
 534              	.LFE140:
 536              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 537              		.align	1
 538              		.global	TIM4_IRQHandler
 539              		.syntax unified
 540              		.thumb
 541              		.thumb_func
 542              		.fpu fpv4-sp-d16
 544              	TIM4_IRQHandler:
 545              	.LFB141:
 357:Src/stm32f3xx_it.c **** 
 358:Src/stm32f3xx_it.c **** /**
 359:Src/stm32f3xx_it.c ****  * @brief This function handles TIM4 global interrupt.
 360:Src/stm32f3xx_it.c ****  */
 361:Src/stm32f3xx_it.c **** void TIM4_IRQHandler(void)
 362:Src/stm32f3xx_it.c **** {
 546              		.loc 1 362 1 is_stmt 1 view -0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550 0000 10B5     		push	{r4, lr}
 551              	.LCFI7:
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 4, -8
 554              		.cfi_offset 14, -4
 363:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 364:Src/stm32f3xx_it.c ****   JP2_MODE = HAL_GPIO_ReadPin(JP2_GPIO_Port, JP2_Pin);
 555              		.loc 1 364 3 view .LVU86
 556              		.loc 1 364 14 is_stmt 0 view .LVU87
 557 0002 104C     		ldr	r4, .L49
 558 0004 4FF48061 		mov	r1, #1024
 559 0008 2046     		mov	r0, r4
 560 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 561              	.LVL9:
 562              		.loc 1 364 12 view .LVU88
 563 000e 0E4B     		ldr	r3, .L49+4
 564 0010 1870     		strb	r0, [r3]
 365:Src/stm32f3xx_it.c ****   JP1_MODE = HAL_GPIO_ReadPin(JP1_GPIO_Port, JP1_Pin);
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 17


 565              		.loc 1 365 3 is_stmt 1 view .LVU89
 566              		.loc 1 365 14 is_stmt 0 view .LVU90
 567 0012 4FF40061 		mov	r1, #2048
 568 0016 2046     		mov	r0, r4
 569 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 570              	.LVL10:
 571              		.loc 1 365 12 view .LVU91
 572 001c 0B4B     		ldr	r3, .L49+8
 573 001e 1870     		strb	r0, [r3]
 366:Src/stm32f3xx_it.c **** 
 367:Src/stm32f3xx_it.c ****   switch (t4tick)
 574              		.loc 1 367 3 is_stmt 1 view .LVU92
 575 0020 0B4B     		ldr	r3, .L49+12
 576 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 577 0024 092B     		cmp	r3, #9
 578 0026 06D0     		beq	.L46
 368:Src/stm32f3xx_it.c ****   {
 369:Src/stm32f3xx_it.c ****   default:
 370:Src/stm32f3xx_it.c ****     t4tick++;
 579              		.loc 1 370 5 view .LVU93
 580              		.loc 1 370 11 is_stmt 0 view .LVU94
 581 0028 0133     		adds	r3, r3, #1
 582 002a 094A     		ldr	r2, .L49+12
 583 002c 1370     		strb	r3, [r2]
 371:Src/stm32f3xx_it.c ****     break;
 584              		.loc 1 371 5 is_stmt 1 view .LVU95
 585              	.L47:
 372:Src/stm32f3xx_it.c ****   case 9:
 373:Src/stm32f3xx_it.c ****     BlinkLED(1);
 374:Src/stm32f3xx_it.c ****     t4tick = 0;
 375:Src/stm32f3xx_it.c ****     break;
 376:Src/stm32f3xx_it.c ****   }
 377:Src/stm32f3xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 378:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 586              		.loc 1 378 3 view .LVU96
 587 002e 0948     		ldr	r0, .L49+16
 588 0030 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 589              	.LVL11:
 379:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 380:Src/stm32f3xx_it.c **** 
 381:Src/stm32f3xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 382:Src/stm32f3xx_it.c **** }
 590              		.loc 1 382 1 is_stmt 0 view .LVU97
 591 0034 10BD     		pop	{r4, pc}
 592              	.L46:
 373:Src/stm32f3xx_it.c ****     t4tick = 0;
 593              		.loc 1 373 5 is_stmt 1 view .LVU98
 594 0036 0120     		movs	r0, #1
 595 0038 FFF7FEFF 		bl	BlinkLED
 596              	.LVL12:
 374:Src/stm32f3xx_it.c ****     break;
 597              		.loc 1 374 5 view .LVU99
 374:Src/stm32f3xx_it.c ****     break;
 598              		.loc 1 374 12 is_stmt 0 view .LVU100
 599 003c 044B     		ldr	r3, .L49+12
 600 003e 0022     		movs	r2, #0
 601 0040 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 18


 375:Src/stm32f3xx_it.c ****   }
 602              		.loc 1 375 5 is_stmt 1 view .LVU101
 603 0042 F4E7     		b	.L47
 604              	.L50:
 605              		.align	2
 606              	.L49:
 607 0044 00040048 		.word	1207960576
 608 0048 00000000 		.word	JP2_MODE
 609 004c 00000000 		.word	JP1_MODE
 610 0050 00000000 		.word	.LANCHOR4
 611 0054 00000000 		.word	htim4
 612              		.cfi_endproc
 613              	.LFE141:
 615              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 616              		.align	1
 617              		.global	SPI2_IRQHandler
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 621              		.fpu fpv4-sp-d16
 623              	SPI2_IRQHandler:
 624              	.LFB142:
 383:Src/stm32f3xx_it.c **** 
 384:Src/stm32f3xx_it.c **** /**
 385:Src/stm32f3xx_it.c ****  * @brief This function handles SPI2 global interrupt.
 386:Src/stm32f3xx_it.c ****  */
 387:Src/stm32f3xx_it.c **** void SPI2_IRQHandler(void)
 388:Src/stm32f3xx_it.c **** {
 625              		.loc 1 388 1 view -0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629 0000 08B5     		push	{r3, lr}
 630              	.LCFI8:
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 3, -8
 633              		.cfi_offset 14, -4
 389:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 390:Src/stm32f3xx_it.c **** 
 391:Src/stm32f3xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 392:Src/stm32f3xx_it.c ****   HAL_I2S_IRQHandler(&hi2s2);
 634              		.loc 1 392 3 view .LVU103
 635 0002 0248     		ldr	r0, .L53
 636 0004 FFF7FEFF 		bl	HAL_I2S_IRQHandler
 637              	.LVL13:
 393:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 394:Src/stm32f3xx_it.c **** 
 395:Src/stm32f3xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 396:Src/stm32f3xx_it.c **** }
 638              		.loc 1 396 1 is_stmt 0 view .LVU104
 639 0008 08BD     		pop	{r3, pc}
 640              	.L54:
 641 000a 00BF     		.align	2
 642              	.L53:
 643 000c 00000000 		.word	hi2s2
 644              		.cfi_endproc
 645              	.LFE142:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 19


 647              		.section	.text.USART2_IRQHandler,"ax",%progbits
 648              		.align	1
 649              		.global	USART2_IRQHandler
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 653              		.fpu fpv4-sp-d16
 655              	USART2_IRQHandler:
 656              	.LFB143:
 397:Src/stm32f3xx_it.c **** 
 398:Src/stm32f3xx_it.c **** /**
 399:Src/stm32f3xx_it.c ****  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI lin
 400:Src/stm32f3xx_it.c ****  */
 401:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 402:Src/stm32f3xx_it.c **** {
 657              		.loc 1 402 1 is_stmt 1 view -0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661 0000 08B5     		push	{r3, lr}
 662              	.LCFI9:
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 3, -8
 665              		.cfi_offset 14, -4
 403:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 404:Src/stm32f3xx_it.c **** 
 405:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 406:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 666              		.loc 1 406 3 view .LVU106
 667 0002 0248     		ldr	r0, .L57
 668 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 669              	.LVL14:
 407:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 408:Src/stm32f3xx_it.c **** 
 409:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 410:Src/stm32f3xx_it.c **** }
 670              		.loc 1 410 1 is_stmt 0 view .LVU107
 671 0008 08BD     		pop	{r3, pc}
 672              	.L58:
 673 000a 00BF     		.align	2
 674              	.L57:
 675 000c 00000000 		.word	huart2
 676              		.cfi_endproc
 677              	.LFE143:
 679              		.global	cdctick
 680              		.global	up
 681              		.global	val
 682              		.global	t2cnt
 683              		.global	txidx
 684              		.global	t4tick
 685              		.global	skip
 686              		.global	signalR
 687              		.global	SignalL
 688              		.global	SignalAvg
 689              		.global	NextBuf
 690              		.global	BBuf
 691              		.global	ABuf
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 20


 692              		.section	.bss.ABuf,"aw",%nobits
 693              		.align	2
 694              		.set	.LANCHOR1,. + 0
 697              	ABuf:
 698 0000 00000000 		.space	64
 698      00000000 
 698      00000000 
 698      00000000 
 698      00000000 
 699              		.section	.bss.BBuf,"aw",%nobits
 700              		.align	2
 701              		.set	.LANCHOR2,. + 0
 704              	BBuf:
 705 0000 00000000 		.space	64
 705      00000000 
 705      00000000 
 705      00000000 
 705      00000000 
 706              		.section	.bss.NextBuf,"aw",%nobits
 707              		.set	.LANCHOR0,. + 0
 710              	NextBuf:
 711 0000 00       		.space	1
 712              		.section	.bss.SignalAvg,"aw",%nobits
 713              		.align	2
 716              	SignalAvg:
 717 0000 00000000 		.space	4
 718              		.section	.bss.SignalL,"aw",%nobits
 719              		.align	2
 722              	SignalL:
 723 0000 00000000 		.space	4
 724              		.section	.bss.cdctick,"aw",%nobits
 725              		.align	1
 728              	cdctick:
 729 0000 0000     		.space	2
 730              		.section	.bss.signalR,"aw",%nobits
 731              		.align	2
 734              	signalR:
 735 0000 00000000 		.space	4
 736              		.section	.bss.skip,"aw",%nobits
 739              	skip:
 740 0000 00       		.space	1
 741              		.section	.bss.t2cnt,"aw",%nobits
 744              	t2cnt:
 745 0000 00       		.space	1
 746              		.section	.bss.t4tick,"aw",%nobits
 747              		.set	.LANCHOR4,. + 0
 750              	t4tick:
 751 0000 00       		.space	1
 752              		.section	.bss.txidx,"aw",%nobits
 753              		.set	.LANCHOR3,. + 0
 756              	txidx:
 757 0000 00       		.space	1
 758              		.section	.bss.up,"aw",%nobits
 761              	up:
 762 0000 00       		.space	1
 763              		.section	.bss.val,"aw",%nobits
 764              		.align	1
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 21


 767              	val:
 768 0000 0000     		.space	2
 769              		.text
 770              	.Letext0:
 771              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 772              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 773              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 774              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 775              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 776              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 777              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 778              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 779              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 780              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 781              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 782              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2s.h"
 783              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 784              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 785              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 786              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 787              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 788              		.file 19 "Inc/led.h"
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:18     .text.NMI_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:47     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:64     .text.MemManage_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:112    .text.UsageFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:136    .text.SVC_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:143    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:156    .text.DebugMon_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:163    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:176    .text.PendSV_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:183    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:196    .text.SysTick_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:203    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:223    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:230    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:250    .text.DMA1_Channel4_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:255    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:262    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:282    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:287    .text.USB_HP_CAN_TX_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:294    .text.USB_HP_CAN_TX_IRQHandler:00000000 USB_HP_CAN_TX_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:314    .text.USB_HP_CAN_TX_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:319    .text.USB_LP_CAN_RX0_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:326    .text.USB_LP_CAN_RX0_IRQHandler:00000000 USB_LP_CAN_RX0_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:346    .text.USB_LP_CAN_RX0_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:351    .text.TIM2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:358    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:412    .text.TIM2_IRQHandler:00000030 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:422    .text.TIM3_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:429    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:525    .text.TIM3_IRQHandler:0000006c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:537    .text.TIM4_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:544    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:607    .text.TIM4_IRQHandler:00000044 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:616    .text.SPI2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:623    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:643    .text.SPI2_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:648    .text.USART2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:655    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:675    .text.USART2_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:728    .bss.cdctick:00000000 cdctick
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:761    .bss.up:00000000 up
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:767    .bss.val:00000000 val
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:744    .bss.t2cnt:00000000 t2cnt
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:756    .bss.txidx:00000000 txidx
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:750    .bss.t4tick:00000000 t4tick
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:739    .bss.skip:00000000 skip
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:734    .bss.signalR:00000000 signalR
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:722    .bss.SignalL:00000000 SignalL
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:716    .bss.SignalAvg:00000000 SignalAvg
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s 			page 23


C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:710    .bss.NextBuf:00000000 NextBuf
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:704    .bss.BBuf:00000000 BBuf
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:697    .bss.ABuf:00000000 ABuf
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:693    .bss.ABuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:700    .bss.BBuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:711    .bss.NextBuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:713    .bss.SignalAvg:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:719    .bss.SignalL:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:725    .bss.cdctick:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:731    .bss.signalR:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:740    .bss.skip:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:745    .bss.t2cnt:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:751    .bss.t4tick:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:757    .bss.txidx:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:762    .bss.up:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\ccG8W2Gd.s:764    .bss.val:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi2_rx
hdma_spi2_tx
HAL_PCD_IRQHandler
hpcd_USB_FS
CDC_Transmit_FS
HAL_TIM_IRQHandler
TX_Flag
htim2
lSample
rSample
htim3
HAL_GPIO_ReadPin
BlinkLED
JP2_MODE
JP1_MODE
htim4
HAL_I2S_IRQHandler
hi2s2
HAL_UART_IRQHandler
huart2
