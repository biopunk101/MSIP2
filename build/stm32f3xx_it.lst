ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****  ******************************************************************************
   4:Src/stm32f3xx_it.c ****  * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****  * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****  ******************************************************************************
   7:Src/stm32f3xx_it.c ****  * @attention
   8:Src/stm32f3xx_it.c ****  *
   9:Src/stm32f3xx_it.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****  * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****  *
  12:Src/stm32f3xx_it.c ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f3xx_it.c ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f3xx_it.c ****  * the License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****  *                             www.st.com/SLA0044
  16:Src/stm32f3xx_it.c ****  *
  17:Src/stm32f3xx_it.c ****  ******************************************************************************
  18:Src/stm32f3xx_it.c ****  */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f3xx_it.c **** #define SampleRate 21
  36:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f3xx_it.c **** 
  41:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f3xx_it.c **** uint8_t ABuf[64] = {0x00};
  46:Src/stm32f3xx_it.c **** uint8_t BBuf[64] = {0x00};
  47:Src/stm32f3xx_it.c **** uint8_t NextBuf = 0;
  48:Src/stm32f3xx_it.c **** 
  49:Src/stm32f3xx_it.c **** uint32_t SignalAvg = 0;
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** uint8_t skip = 0;
  52:Src/stm32f3xx_it.c **** uint8_t t4tick = 0;
  53:Src/stm32f3xx_it.c **** uint8_t txidx = 0;
  54:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  55:Src/stm32f3xx_it.c **** 
  56:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  57:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  58:Src/stm32f3xx_it.c **** 
  59:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  62:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  63:Src/stm32f3xx_it.c **** extern uint8_t JP2_MODE, JP1_MODE;
  64:Src/stm32f3xx_it.c **** extern uint16_t ADC_Values[4];
  65:Src/stm32f3xx_it.c **** uint8_t t2cnt = 0;
  66:Src/stm32f3xx_it.c **** uint16_t val = 0;
  67:Src/stm32f3xx_it.c **** uint8_t up = 0;
  68:Src/stm32f3xx_it.c **** uint16_t cdctick = 0;
  69:Src/stm32f3xx_it.c **** extern uint16_t TxFrame[32];
  70:Src/stm32f3xx_it.c **** extern uint8_t TX_Flag;
  71:Src/stm32f3xx_it.c **** extern uint8_t TXBuf[64];
  72:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  73:Src/stm32f3xx_it.c **** 
  74:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  75:Src/stm32f3xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  76:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_rx;
  77:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  78:Src/stm32f3xx_it.c **** extern I2S_HandleTypeDef hi2s2;
  79:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  80:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  81:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim4;
  82:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  83:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  84:Src/stm32f3xx_it.c **** 
  85:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  86:Src/stm32f3xx_it.c **** 
  87:Src/stm32f3xx_it.c **** /******************************************************************************/
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 3


  88:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  89:Src/stm32f3xx_it.c **** /******************************************************************************/
  90:Src/stm32f3xx_it.c **** /**
  91:Src/stm32f3xx_it.c ****  * @brief This function handles Non maskable interrupt.
  92:Src/stm32f3xx_it.c ****  */
  93:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  94:Src/stm32f3xx_it.c **** {
  29              		.loc 1 94 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  95:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  98:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  99:Src/stm32f3xx_it.c **** 
 100:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 101:Src/stm32f3xx_it.c **** }
  34              		.loc 1 101 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE126:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB127:
 102:Src/stm32f3xx_it.c **** 
 103:Src/stm32f3xx_it.c **** /**
 104:Src/stm32f3xx_it.c ****  * @brief This function handles Hard fault interrupt.
 105:Src/stm32f3xx_it.c ****  */
 106:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
 107:Src/stm32f3xx_it.c **** {
  49              		.loc 1 107 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
 108:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 109:Src/stm32f3xx_it.c **** 
 110:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 111:Src/stm32f3xx_it.c ****   while (1)
  56              		.loc 1 111 3 discriminator 1 view .LVU3
 112:Src/stm32f3xx_it.c ****   {
 113:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 114:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 115:Src/stm32f3xx_it.c ****   }
  57              		.loc 1 115 3 discriminator 1 view .LVU4
 111:Src/stm32f3xx_it.c ****   {
  58              		.loc 1 111 9 discriminator 1 view .LVU5
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 4


  59 0000 FEE7     		b	.L3
  60              		.cfi_endproc
  61              	.LFE127:
  63              		.section	.text.MemManage_Handler,"ax",%progbits
  64              		.align	1
  65              		.global	MemManage_Handler
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu fpv4-sp-d16
  71              	MemManage_Handler:
  72              	.LFB128:
 116:Src/stm32f3xx_it.c **** }
 117:Src/stm32f3xx_it.c **** 
 118:Src/stm32f3xx_it.c **** /**
 119:Src/stm32f3xx_it.c ****  * @brief This function handles Memory management fault.
 120:Src/stm32f3xx_it.c ****  */
 121:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 122:Src/stm32f3xx_it.c **** {
  73              		.loc 1 122 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79              	.L5:
 123:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 124:Src/stm32f3xx_it.c **** 
 125:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 126:Src/stm32f3xx_it.c ****   while (1)
  80              		.loc 1 126 3 discriminator 1 view .LVU7
 127:Src/stm32f3xx_it.c ****   {
 128:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 129:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 130:Src/stm32f3xx_it.c ****   }
  81              		.loc 1 130 3 discriminator 1 view .LVU8
 126:Src/stm32f3xx_it.c ****   {
  82              		.loc 1 126 9 discriminator 1 view .LVU9
  83 0000 FEE7     		b	.L5
  84              		.cfi_endproc
  85              	.LFE128:
  87              		.section	.text.BusFault_Handler,"ax",%progbits
  88              		.align	1
  89              		.global	BusFault_Handler
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  93              		.fpu fpv4-sp-d16
  95              	BusFault_Handler:
  96              	.LFB129:
 131:Src/stm32f3xx_it.c **** }
 132:Src/stm32f3xx_it.c **** 
 133:Src/stm32f3xx_it.c **** /**
 134:Src/stm32f3xx_it.c ****  * @brief This function handles Pre-fetch fault, memory access fault.
 135:Src/stm32f3xx_it.c ****  */
 136:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 137:Src/stm32f3xx_it.c **** {
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 5


  97              		.loc 1 137 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L7:
 138:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 139:Src/stm32f3xx_it.c **** 
 140:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 141:Src/stm32f3xx_it.c ****   while (1)
 104              		.loc 1 141 3 discriminator 1 view .LVU11
 142:Src/stm32f3xx_it.c ****   {
 143:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 144:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 145:Src/stm32f3xx_it.c ****   }
 105              		.loc 1 145 3 discriminator 1 view .LVU12
 141:Src/stm32f3xx_it.c ****   {
 106              		.loc 1 141 9 discriminator 1 view .LVU13
 107 0000 FEE7     		b	.L7
 108              		.cfi_endproc
 109              	.LFE129:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 117              		.fpu fpv4-sp-d16
 119              	UsageFault_Handler:
 120              	.LFB130:
 146:Src/stm32f3xx_it.c **** }
 147:Src/stm32f3xx_it.c **** 
 148:Src/stm32f3xx_it.c **** /**
 149:Src/stm32f3xx_it.c ****  * @brief This function handles Undefined instruction or illegal state.
 150:Src/stm32f3xx_it.c ****  */
 151:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 152:Src/stm32f3xx_it.c **** {
 121              		.loc 1 152 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L9:
 153:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 154:Src/stm32f3xx_it.c **** 
 155:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 156:Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 156 3 discriminator 1 view .LVU15
 157:Src/stm32f3xx_it.c ****   {
 158:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 159:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 160:Src/stm32f3xx_it.c ****   }
 129              		.loc 1 160 3 discriminator 1 view .LVU16
 156:Src/stm32f3xx_it.c ****   {
 130              		.loc 1 156 9 discriminator 1 view .LVU17
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 6


 131 0000 FEE7     		b	.L9
 132              		.cfi_endproc
 133              	.LFE130:
 135              		.section	.text.SVC_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	SVC_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	SVC_Handler:
 144              	.LFB131:
 161:Src/stm32f3xx_it.c **** }
 162:Src/stm32f3xx_it.c **** 
 163:Src/stm32f3xx_it.c **** /**
 164:Src/stm32f3xx_it.c ****  * @brief This function handles System service call via SWI instruction.
 165:Src/stm32f3xx_it.c ****  */
 166:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 167:Src/stm32f3xx_it.c **** {
 145              		.loc 1 167 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 168:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 169:Src/stm32f3xx_it.c **** 
 170:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 171:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 172:Src/stm32f3xx_it.c **** 
 173:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 174:Src/stm32f3xx_it.c **** }
 150              		.loc 1 174 1 view .LVU19
 151 0000 7047     		bx	lr
 152              		.cfi_endproc
 153              	.LFE131:
 155              		.section	.text.DebugMon_Handler,"ax",%progbits
 156              		.align	1
 157              		.global	DebugMon_Handler
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 161              		.fpu fpv4-sp-d16
 163              	DebugMon_Handler:
 164              	.LFB132:
 175:Src/stm32f3xx_it.c **** 
 176:Src/stm32f3xx_it.c **** /**
 177:Src/stm32f3xx_it.c ****  * @brief This function handles Debug monitor.
 178:Src/stm32f3xx_it.c ****  */
 179:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 180:Src/stm32f3xx_it.c **** {
 165              		.loc 1 180 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 181:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 182:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 7


 183:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 184:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 185:Src/stm32f3xx_it.c **** 
 186:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 187:Src/stm32f3xx_it.c **** }
 170              		.loc 1 187 1 view .LVU21
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE132:
 175              		.section	.text.PendSV_Handler,"ax",%progbits
 176              		.align	1
 177              		.global	PendSV_Handler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	PendSV_Handler:
 184              	.LFB133:
 188:Src/stm32f3xx_it.c **** 
 189:Src/stm32f3xx_it.c **** /**
 190:Src/stm32f3xx_it.c ****  * @brief This function handles Pendable request for system service.
 191:Src/stm32f3xx_it.c ****  */
 192:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 193:Src/stm32f3xx_it.c **** {
 185              		.loc 1 193 1 view -0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 194:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 195:Src/stm32f3xx_it.c **** 
 196:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 197:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 198:Src/stm32f3xx_it.c **** 
 199:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 200:Src/stm32f3xx_it.c **** }
 190              		.loc 1 200 1 view .LVU23
 191 0000 7047     		bx	lr
 192              		.cfi_endproc
 193              	.LFE133:
 195              		.section	.text.SysTick_Handler,"ax",%progbits
 196              		.align	1
 197              		.global	SysTick_Handler
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	SysTick_Handler:
 204              	.LFB134:
 201:Src/stm32f3xx_it.c **** 
 202:Src/stm32f3xx_it.c **** /**
 203:Src/stm32f3xx_it.c ****  * @brief This function handles System tick timer.
 204:Src/stm32f3xx_it.c ****  */
 205:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 206:Src/stm32f3xx_it.c **** {
 205              		.loc 1 206 1 view -0
 206              		.cfi_startproc
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 8


 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209 0000 08B5     		push	{r3, lr}
 210              	.LCFI0:
 211              		.cfi_def_cfa_offset 8
 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 207:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 208:Src/stm32f3xx_it.c **** 
 209:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 210:Src/stm32f3xx_it.c ****   HAL_IncTick();
 214              		.loc 1 210 3 view .LVU25
 215 0002 FFF7FEFF 		bl	HAL_IncTick
 216              	.LVL0:
 211:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 212:Src/stm32f3xx_it.c **** 
 213:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 214:Src/stm32f3xx_it.c **** }
 217              		.loc 1 214 1 is_stmt 0 view .LVU26
 218 0006 08BD     		pop	{r3, pc}
 219              		.cfi_endproc
 220              	.LFE134:
 222              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 223              		.align	1
 224              		.global	DMA1_Channel4_IRQHandler
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	DMA1_Channel4_IRQHandler:
 231              	.LFB135:
 215:Src/stm32f3xx_it.c **** 
 216:Src/stm32f3xx_it.c **** /******************************************************************************/
 217:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 218:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 219:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 220:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 221:Src/stm32f3xx_it.c **** /******************************************************************************/
 222:Src/stm32f3xx_it.c **** 
 223:Src/stm32f3xx_it.c **** /**
 224:Src/stm32f3xx_it.c ****  * @brief This function handles DMA1 channel4 global interrupt.
 225:Src/stm32f3xx_it.c ****  */
 226:Src/stm32f3xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 227:Src/stm32f3xx_it.c **** {
 232              		.loc 1 227 1 is_stmt 1 view -0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236 0000 08B5     		push	{r3, lr}
 237              	.LCFI1:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 3, -8
 240              		.cfi_offset 14, -4
 228:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 229:Src/stm32f3xx_it.c **** 
 230:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 231:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_rx);
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 9


 241              		.loc 1 231 3 view .LVU28
 242 0002 0248     		ldr	r0, .L17
 243 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 244              	.LVL1:
 232:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 233:Src/stm32f3xx_it.c **** 
 234:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 235:Src/stm32f3xx_it.c **** }
 245              		.loc 1 235 1 is_stmt 0 view .LVU29
 246 0008 08BD     		pop	{r3, pc}
 247              	.L18:
 248 000a 00BF     		.align	2
 249              	.L17:
 250 000c 00000000 		.word	hdma_spi2_rx
 251              		.cfi_endproc
 252              	.LFE135:
 254              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.global	DMA1_Channel5_IRQHandler
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	DMA1_Channel5_IRQHandler:
 263              	.LFB136:
 236:Src/stm32f3xx_it.c **** 
 237:Src/stm32f3xx_it.c **** /**
 238:Src/stm32f3xx_it.c ****  * @brief This function handles DMA1 channel5 global interrupt.
 239:Src/stm32f3xx_it.c ****  */
 240:Src/stm32f3xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 241:Src/stm32f3xx_it.c **** {
 264              		.loc 1 241 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI2:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
 242:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 243:Src/stm32f3xx_it.c **** 
 244:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 245:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 273              		.loc 1 245 3 view .LVU31
 274 0002 0248     		ldr	r0, .L21
 275 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 276              	.LVL2:
 246:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 247:Src/stm32f3xx_it.c **** 
 248:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 249:Src/stm32f3xx_it.c **** }
 277              		.loc 1 249 1 is_stmt 0 view .LVU32
 278 0008 08BD     		pop	{r3, pc}
 279              	.L22:
 280 000a 00BF     		.align	2
 281              	.L21:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 10


 282 000c 00000000 		.word	hdma_spi2_tx
 283              		.cfi_endproc
 284              	.LFE136:
 286              		.section	.text.USB_HP_CAN_TX_IRQHandler,"ax",%progbits
 287              		.align	1
 288              		.global	USB_HP_CAN_TX_IRQHandler
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 292              		.fpu fpv4-sp-d16
 294              	USB_HP_CAN_TX_IRQHandler:
 295              	.LFB137:
 250:Src/stm32f3xx_it.c **** 
 251:Src/stm32f3xx_it.c **** /**
 252:Src/stm32f3xx_it.c ****  * @brief This function handles USB high priority or CAN_TX interrupts.
 253:Src/stm32f3xx_it.c ****  */
 254:Src/stm32f3xx_it.c **** void USB_HP_CAN_TX_IRQHandler(void)
 255:Src/stm32f3xx_it.c **** {
 296              		.loc 1 255 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 08B5     		push	{r3, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 256:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN_TX_IRQn 0 */
 257:Src/stm32f3xx_it.c **** 
 258:Src/stm32f3xx_it.c ****   /* USER CODE END USB_HP_CAN_TX_IRQn 0 */
 259:Src/stm32f3xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 305              		.loc 1 259 3 view .LVU34
 306 0002 0248     		ldr	r0, .L25
 307 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 308              	.LVL3:
 260:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_HP_CAN_TX_IRQn 1 */
 261:Src/stm32f3xx_it.c **** 
 262:Src/stm32f3xx_it.c ****   /* USER CODE END USB_HP_CAN_TX_IRQn 1 */
 263:Src/stm32f3xx_it.c **** }
 309              		.loc 1 263 1 is_stmt 0 view .LVU35
 310 0008 08BD     		pop	{r3, pc}
 311              	.L26:
 312 000a 00BF     		.align	2
 313              	.L25:
 314 000c 00000000 		.word	hpcd_USB_FS
 315              		.cfi_endproc
 316              	.LFE137:
 318              		.section	.text.USB_LP_CAN_RX0_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.global	USB_LP_CAN_RX0_IRQHandler
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	USB_LP_CAN_RX0_IRQHandler:
 327              	.LFB138:
 264:Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 11


 265:Src/stm32f3xx_it.c **** /**
 266:Src/stm32f3xx_it.c ****  * @brief This function handles USB low priority or CAN_RX0 interrupts.
 267:Src/stm32f3xx_it.c ****  */
 268:Src/stm32f3xx_it.c **** void USB_LP_CAN_RX0_IRQHandler(void)
 269:Src/stm32f3xx_it.c **** {
 328              		.loc 1 269 1 is_stmt 1 view -0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332 0000 08B5     		push	{r3, lr}
 333              	.LCFI4:
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 3, -8
 336              		.cfi_offset 14, -4
 270:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN_RX0_IRQn 0 */
 271:Src/stm32f3xx_it.c **** 
 272:Src/stm32f3xx_it.c ****   /* USER CODE END USB_LP_CAN_RX0_IRQn 0 */
 273:Src/stm32f3xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 337              		.loc 1 273 3 view .LVU37
 338 0002 0248     		ldr	r0, .L29
 339 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 340              	.LVL4:
 274:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USB_LP_CAN_RX0_IRQn 1 */
 275:Src/stm32f3xx_it.c **** 
 276:Src/stm32f3xx_it.c ****   /* USER CODE END USB_LP_CAN_RX0_IRQn 1 */
 277:Src/stm32f3xx_it.c **** }
 341              		.loc 1 277 1 is_stmt 0 view .LVU38
 342 0008 08BD     		pop	{r3, pc}
 343              	.L30:
 344 000a 00BF     		.align	2
 345              	.L29:
 346 000c 00000000 		.word	hpcd_USB_FS
 347              		.cfi_endproc
 348              	.LFE138:
 350              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 351              		.align	1
 352              		.global	TIM2_IRQHandler
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 356              		.fpu fpv4-sp-d16
 358              	TIM2_IRQHandler:
 359              	.LFB139:
 278:Src/stm32f3xx_it.c **** 
 279:Src/stm32f3xx_it.c **** /**
 280:Src/stm32f3xx_it.c ****  * @brief This function handles TIM2 global interrupt.
 281:Src/stm32f3xx_it.c ****  */
 282:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 283:Src/stm32f3xx_it.c **** {
 360              		.loc 1 283 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 12


 368              		.cfi_offset 14, -4
 284:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 285:Src/stm32f3xx_it.c ****   if (TX_Flag)
 369              		.loc 1 285 3 view .LVU40
 370              		.loc 1 285 7 is_stmt 0 view .LVU41
 371 0002 0B4B     		ldr	r3, .L36
 372 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 373              		.loc 1 285 6 view .LVU42
 374 0006 4BB1     		cbz	r3, .L32
 286:Src/stm32f3xx_it.c ****   {
 287:Src/stm32f3xx_it.c ****     if (NextBuf)
 375              		.loc 1 287 5 is_stmt 1 view .LVU43
 376              		.loc 1 287 9 is_stmt 0 view .LVU44
 377 0008 0A4B     		ldr	r3, .L36+4
 378 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379              		.loc 1 287 8 view .LVU45
 380 000c 53B1     		cbz	r3, .L33
 381              	.LBB2:
 288:Src/stm32f3xx_it.c ****       CDC_Transmit_FS(ABuf, SampleRate * 3);
 382              		.loc 1 288 7 is_stmt 1 view .LVU46
 383 000e 3F21     		movs	r1, #63
 384 0010 0948     		ldr	r0, .L36+8
 385 0012 FFF7FEFF 		bl	CDC_Transmit_FS
 386              	.LVL5:
 387              	.L34:
 388              	.LBE2:
 289:Src/stm32f3xx_it.c ****     else
 290:Src/stm32f3xx_it.c ****       CDC_Transmit_FS(BBuf, SampleRate * 3);
 291:Src/stm32f3xx_it.c **** 
 292:Src/stm32f3xx_it.c ****     TX_Flag = 0;
 389              		.loc 1 292 5 view .LVU47
 390              		.loc 1 292 13 is_stmt 0 view .LVU48
 391 0016 064B     		ldr	r3, .L36
 392 0018 0022     		movs	r2, #0
 393 001a 1A70     		strb	r2, [r3]
 394              	.L32:
 293:Src/stm32f3xx_it.c ****   }
 294:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 295:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 395              		.loc 1 295 3 is_stmt 1 view .LVU49
 396 001c 0748     		ldr	r0, .L36+12
 397 001e FFF7FEFF 		bl	HAL_TIM_IRQHandler
 398              	.LVL6:
 296:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 297:Src/stm32f3xx_it.c **** 
 298:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 299:Src/stm32f3xx_it.c **** }
 399              		.loc 1 299 1 is_stmt 0 view .LVU50
 400 0022 08BD     		pop	{r3, pc}
 401              	.L33:
 402              	.LBB3:
 290:Src/stm32f3xx_it.c **** 
 403              		.loc 1 290 7 is_stmt 1 view .LVU51
 404 0024 3F21     		movs	r1, #63
 405 0026 0648     		ldr	r0, .L36+16
 406 0028 FFF7FEFF 		bl	CDC_Transmit_FS
 407              	.LVL7:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 13


 408 002c F3E7     		b	.L34
 409              	.L37:
 410 002e 00BF     		.align	2
 411              	.L36:
 412 0030 00000000 		.word	TX_Flag
 413 0034 00000000 		.word	.LANCHOR0
 414 0038 00000000 		.word	.LANCHOR1
 415 003c 00000000 		.word	htim2
 416 0040 00000000 		.word	.LANCHOR2
 417              	.LBE3:
 418              		.cfi_endproc
 419              	.LFE139:
 421              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 422              		.align	1
 423              		.global	TIM3_IRQHandler
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 427              		.fpu fpv4-sp-d16
 429              	TIM3_IRQHandler:
 430              	.LFB140:
 300:Src/stm32f3xx_it.c **** 
 301:Src/stm32f3xx_it.c **** /**
 302:Src/stm32f3xx_it.c ****  * @brief This function handles TIM3 global interrupt.
 303:Src/stm32f3xx_it.c ****  */
 304:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 305:Src/stm32f3xx_it.c **** {
 431              		.loc 1 305 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435 0000 70B5     		push	{r4, r5, r6, lr}
 436              	.LCFI6:
 437              		.cfi_def_cfa_offset 16
 438              		.cfi_offset 4, -16
 439              		.cfi_offset 5, -12
 440              		.cfi_offset 6, -8
 441              		.cfi_offset 14, -4
 306:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 307:Src/stm32f3xx_it.c ****   if (!skip)
 442              		.loc 1 307 3 view .LVU53
 443              		.loc 1 307 7 is_stmt 0 view .LVU54
 444 0002 214B     		ldr	r3, .L44
 445 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 446              		.loc 1 307 6 view .LVU55
 447 0006 1BB1     		cbz	r3, .L43
 448              	.L39:
 308:Src/stm32f3xx_it.c ****   {
 309:Src/stm32f3xx_it.c **** #ifdef SIMULATOR
 310:Src/stm32f3xx_it.c ****     SignalAvg = GenerateSignal();
 311:Src/stm32f3xx_it.c **** #else
 312:Src/stm32f3xx_it.c ****     HAL_I2S_Receive_IT(&hi2s2, (uint16_t *)&SignalAvg, 3);
 313:Src/stm32f3xx_it.c **** 
 314:Src/stm32f3xx_it.c **** #endif
 315:Src/stm32f3xx_it.c **** 
 316:Src/stm32f3xx_it.c ****     // pingpong buffer
 317:Src/stm32f3xx_it.c ****     if (!NextBuf)
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 14


 318:Src/stm32f3xx_it.c ****     { // ABuf[txidx++] = SignalAvg;
 319:Src/stm32f3xx_it.c ****       memcpy(&ABuf[txidx * 3], &SignalAvg, 3);
 320:Src/stm32f3xx_it.c ****       BlinkLED(3);
 321:Src/stm32f3xx_it.c ****       txidx++;
 322:Src/stm32f3xx_it.c ****     }
 323:Src/stm32f3xx_it.c ****     else
 324:Src/stm32f3xx_it.c ****     { // BBuf[txidx++] = SignalAvg;
 325:Src/stm32f3xx_it.c ****       memcpy(&BBuf[txidx * 3], &SignalAvg, 3);
 326:Src/stm32f3xx_it.c ****       BlinkLED(4);
 327:Src/stm32f3xx_it.c ****       txidx++;
 328:Src/stm32f3xx_it.c ****     }
 329:Src/stm32f3xx_it.c **** 
 330:Src/stm32f3xx_it.c ****     if (txidx >= SampleRate) // 32->128?
 331:Src/stm32f3xx_it.c ****     {
 332:Src/stm32f3xx_it.c **** 
 333:Src/stm32f3xx_it.c ****       NextBuf ^= 1;
 334:Src/stm32f3xx_it.c ****       TX_Flag = 1;
 335:Src/stm32f3xx_it.c ****       txidx = 0;
 336:Src/stm32f3xx_it.c ****     }
 337:Src/stm32f3xx_it.c ****   }
 338:Src/stm32f3xx_it.c ****   // skip ^= 1; half sampling
 339:Src/stm32f3xx_it.c **** 
 340:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 341:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 449              		.loc 1 341 3 is_stmt 1 view .LVU56
 450 0008 2048     		ldr	r0, .L44+4
 451 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 452              	.LVL8:
 342:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 343:Src/stm32f3xx_it.c **** 
 344:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 345:Src/stm32f3xx_it.c **** }
 453              		.loc 1 345 1 is_stmt 0 view .LVU57
 454 000e 70BD     		pop	{r4, r5, r6, pc}
 455              	.L43:
 312:Src/stm32f3xx_it.c **** 
 456              		.loc 1 312 5 is_stmt 1 view .LVU58
 457 0010 0322     		movs	r2, #3
 458 0012 1F49     		ldr	r1, .L44+8
 459 0014 1F48     		ldr	r0, .L44+12
 460 0016 FFF7FEFF 		bl	HAL_I2S_Receive_IT
 461              	.LVL9:
 317:Src/stm32f3xx_it.c ****     { // ABuf[txidx++] = SignalAvg;
 462              		.loc 1 317 5 view .LVU59
 317:Src/stm32f3xx_it.c ****     { // ABuf[txidx++] = SignalAvg;
 463              		.loc 1 317 9 is_stmt 0 view .LVU60
 464 001a 1F4B     		ldr	r3, .L44+16
 465 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 317:Src/stm32f3xx_it.c ****     { // ABuf[txidx++] = SignalAvg;
 466              		.loc 1 317 8 view .LVU61
 467 001e 03BB     		cbnz	r3, .L40
 468              	.LBB4:
 319:Src/stm32f3xx_it.c ****       BlinkLED(3);
 469              		.loc 1 319 7 is_stmt 1 view .LVU62
 319:Src/stm32f3xx_it.c ****       BlinkLED(3);
 470              		.loc 1 319 26 is_stmt 0 view .LVU63
 471 0020 1E4C     		ldr	r4, .L44+20
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 15


 472 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 473 0024 03EB4303 		add	r3, r3, r3, lsl #1
 319:Src/stm32f3xx_it.c ****       BlinkLED(3);
 474              		.loc 1 319 14 view .LVU64
 475 0028 1D49     		ldr	r1, .L44+24
 476 002a C818     		adds	r0, r1, r3
 319:Src/stm32f3xx_it.c ****       BlinkLED(3);
 477              		.loc 1 319 7 view .LVU65
 478 002c 184A     		ldr	r2, .L44+8
 479 002e 1588     		ldrh	r5, [r2]	@ unaligned
 480 0030 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 481 0032 CD52     		strh	r5, [r1, r3]	@ unaligned
 482 0034 8270     		strb	r2, [r0, #2]
 320:Src/stm32f3xx_it.c ****       txidx++;
 483              		.loc 1 320 7 is_stmt 1 view .LVU66
 484 0036 0320     		movs	r0, #3
 485 0038 FFF7FEFF 		bl	BlinkLED
 486              	.LVL10:
 321:Src/stm32f3xx_it.c ****     }
 487              		.loc 1 321 7 view .LVU67
 321:Src/stm32f3xx_it.c ****     }
 488              		.loc 1 321 12 is_stmt 0 view .LVU68
 489 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 490 003e 0133     		adds	r3, r3, #1
 491 0040 2370     		strb	r3, [r4]
 492              	.L41:
 493              	.LBE4:
 330:Src/stm32f3xx_it.c ****     {
 494              		.loc 1 330 5 is_stmt 1 view .LVU69
 330:Src/stm32f3xx_it.c ****     {
 495              		.loc 1 330 15 is_stmt 0 view .LVU70
 496 0042 164B     		ldr	r3, .L44+20
 497 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 330:Src/stm32f3xx_it.c ****     {
 498              		.loc 1 330 8 view .LVU71
 499 0046 142B     		cmp	r3, #20
 500 0048 DED9     		bls	.L39
 333:Src/stm32f3xx_it.c ****       TX_Flag = 1;
 501              		.loc 1 333 7 is_stmt 1 view .LVU72
 333:Src/stm32f3xx_it.c ****       TX_Flag = 1;
 502              		.loc 1 333 15 is_stmt 0 view .LVU73
 503 004a 134A     		ldr	r2, .L44+16
 504 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 505 004e 83F00103 		eor	r3, r3, #1
 506 0052 1370     		strb	r3, [r2]
 334:Src/stm32f3xx_it.c ****       txidx = 0;
 507              		.loc 1 334 7 is_stmt 1 view .LVU74
 334:Src/stm32f3xx_it.c ****       txidx = 0;
 508              		.loc 1 334 15 is_stmt 0 view .LVU75
 509 0054 134B     		ldr	r3, .L44+28
 510 0056 0122     		movs	r2, #1
 511 0058 1A70     		strb	r2, [r3]
 335:Src/stm32f3xx_it.c ****     }
 512              		.loc 1 335 7 is_stmt 1 view .LVU76
 335:Src/stm32f3xx_it.c ****     }
 513              		.loc 1 335 13 is_stmt 0 view .LVU77
 514 005a 104B     		ldr	r3, .L44+20
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 16


 515 005c 0022     		movs	r2, #0
 516 005e 1A70     		strb	r2, [r3]
 517 0060 D2E7     		b	.L39
 518              	.L40:
 519              	.LBB5:
 325:Src/stm32f3xx_it.c ****       BlinkLED(4);
 520              		.loc 1 325 7 is_stmt 1 view .LVU78
 325:Src/stm32f3xx_it.c ****       BlinkLED(4);
 521              		.loc 1 325 26 is_stmt 0 view .LVU79
 522 0062 0E4C     		ldr	r4, .L44+20
 523 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 524 0066 03EB4303 		add	r3, r3, r3, lsl #1
 325:Src/stm32f3xx_it.c ****       BlinkLED(4);
 525              		.loc 1 325 14 view .LVU80
 526 006a 0F49     		ldr	r1, .L44+32
 527 006c C818     		adds	r0, r1, r3
 325:Src/stm32f3xx_it.c ****       BlinkLED(4);
 528              		.loc 1 325 7 view .LVU81
 529 006e 084A     		ldr	r2, .L44+8
 530 0070 1588     		ldrh	r5, [r2]	@ unaligned
 531 0072 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 532 0074 CD52     		strh	r5, [r1, r3]	@ unaligned
 533 0076 8270     		strb	r2, [r0, #2]
 326:Src/stm32f3xx_it.c ****       txidx++;
 534              		.loc 1 326 7 is_stmt 1 view .LVU82
 535 0078 0420     		movs	r0, #4
 536 007a FFF7FEFF 		bl	BlinkLED
 537              	.LVL11:
 327:Src/stm32f3xx_it.c ****     }
 538              		.loc 1 327 7 view .LVU83
 327:Src/stm32f3xx_it.c ****     }
 539              		.loc 1 327 12 is_stmt 0 view .LVU84
 540 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 541 0080 0133     		adds	r3, r3, #1
 542 0082 2370     		strb	r3, [r4]
 543 0084 DDE7     		b	.L41
 544              	.L45:
 545 0086 00BF     		.align	2
 546              	.L44:
 547 0088 00000000 		.word	.LANCHOR3
 548 008c 00000000 		.word	htim3
 549 0090 00000000 		.word	.LANCHOR4
 550 0094 00000000 		.word	hi2s2
 551 0098 00000000 		.word	.LANCHOR0
 552 009c 00000000 		.word	.LANCHOR5
 553 00a0 00000000 		.word	.LANCHOR1
 554 00a4 00000000 		.word	TX_Flag
 555 00a8 00000000 		.word	.LANCHOR2
 556              	.LBE5:
 557              		.cfi_endproc
 558              	.LFE140:
 560              		.section	.text.TIM4_IRQHandler,"ax",%progbits
 561              		.align	1
 562              		.global	TIM4_IRQHandler
 563              		.syntax unified
 564              		.thumb
 565              		.thumb_func
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 17


 566              		.fpu fpv4-sp-d16
 568              	TIM4_IRQHandler:
 569              	.LFB141:
 346:Src/stm32f3xx_it.c **** 
 347:Src/stm32f3xx_it.c **** /**
 348:Src/stm32f3xx_it.c ****  * @brief This function handles TIM4 global interrupt.
 349:Src/stm32f3xx_it.c ****  */
 350:Src/stm32f3xx_it.c **** void TIM4_IRQHandler(void)
 351:Src/stm32f3xx_it.c **** {
 570              		.loc 1 351 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574 0000 10B5     		push	{r4, lr}
 575              	.LCFI7:
 576              		.cfi_def_cfa_offset 8
 577              		.cfi_offset 4, -8
 578              		.cfi_offset 14, -4
 352:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 0 */
 353:Src/stm32f3xx_it.c ****   JP2_MODE = HAL_GPIO_ReadPin(JP2_GPIO_Port, JP2_Pin);
 579              		.loc 1 353 3 view .LVU86
 580              		.loc 1 353 14 is_stmt 0 view .LVU87
 581 0002 104C     		ldr	r4, .L50
 582 0004 4FF48061 		mov	r1, #1024
 583 0008 2046     		mov	r0, r4
 584 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 585              	.LVL12:
 586              		.loc 1 353 12 view .LVU88
 587 000e 0E4B     		ldr	r3, .L50+4
 588 0010 1870     		strb	r0, [r3]
 354:Src/stm32f3xx_it.c ****   JP1_MODE = HAL_GPIO_ReadPin(JP1_GPIO_Port, JP1_Pin);
 589              		.loc 1 354 3 is_stmt 1 view .LVU89
 590              		.loc 1 354 14 is_stmt 0 view .LVU90
 591 0012 4FF40061 		mov	r1, #2048
 592 0016 2046     		mov	r0, r4
 593 0018 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 594              	.LVL13:
 595              		.loc 1 354 12 view .LVU91
 596 001c 0B4B     		ldr	r3, .L50+8
 597 001e 1870     		strb	r0, [r3]
 355:Src/stm32f3xx_it.c **** 
 356:Src/stm32f3xx_it.c ****   switch (t4tick)
 598              		.loc 1 356 3 is_stmt 1 view .LVU92
 599 0020 0B4B     		ldr	r3, .L50+12
 600 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 601 0024 092B     		cmp	r3, #9
 602 0026 06D0     		beq	.L47
 603              	.LBB6:
 357:Src/stm32f3xx_it.c ****   {
 358:Src/stm32f3xx_it.c ****   default:
 359:Src/stm32f3xx_it.c ****     t4tick++;
 604              		.loc 1 359 5 view .LVU93
 605              		.loc 1 359 11 is_stmt 0 view .LVU94
 606 0028 0133     		adds	r3, r3, #1
 607 002a 094A     		ldr	r2, .L50+12
 608 002c 1370     		strb	r3, [r2]
 360:Src/stm32f3xx_it.c ****     break;
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 18


 609              		.loc 1 360 5 is_stmt 1 view .LVU95
 610              	.L48:
 611              	.LBE6:
 361:Src/stm32f3xx_it.c ****   case 9:
 362:Src/stm32f3xx_it.c ****     BlinkLED(1);
 363:Src/stm32f3xx_it.c ****     t4tick = 0;
 364:Src/stm32f3xx_it.c ****     break;
 365:Src/stm32f3xx_it.c ****   }
 366:Src/stm32f3xx_it.c ****   /* USER CODE END TIM4_IRQn 0 */
 367:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim4);
 612              		.loc 1 367 3 view .LVU96
 613 002e 0948     		ldr	r0, .L50+16
 614 0030 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 615              	.LVL14:
 368:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM4_IRQn 1 */
 369:Src/stm32f3xx_it.c **** 
 370:Src/stm32f3xx_it.c ****   /* USER CODE END TIM4_IRQn 1 */
 371:Src/stm32f3xx_it.c **** }
 616              		.loc 1 371 1 is_stmt 0 view .LVU97
 617 0034 10BD     		pop	{r4, pc}
 618              	.L47:
 619              	.LBB7:
 362:Src/stm32f3xx_it.c ****     t4tick = 0;
 620              		.loc 1 362 5 is_stmt 1 view .LVU98
 621 0036 0120     		movs	r0, #1
 622 0038 FFF7FEFF 		bl	BlinkLED
 623              	.LVL15:
 363:Src/stm32f3xx_it.c ****     break;
 624              		.loc 1 363 5 view .LVU99
 363:Src/stm32f3xx_it.c ****     break;
 625              		.loc 1 363 12 is_stmt 0 view .LVU100
 626 003c 044B     		ldr	r3, .L50+12
 627 003e 0022     		movs	r2, #0
 628 0040 1A70     		strb	r2, [r3]
 364:Src/stm32f3xx_it.c ****   }
 629              		.loc 1 364 5 is_stmt 1 view .LVU101
 630 0042 F4E7     		b	.L48
 631              	.L51:
 632              		.align	2
 633              	.L50:
 634 0044 00040048 		.word	1207960576
 635 0048 00000000 		.word	JP2_MODE
 636 004c 00000000 		.word	JP1_MODE
 637 0050 00000000 		.word	.LANCHOR6
 638 0054 00000000 		.word	htim4
 639              	.LBE7:
 640              		.cfi_endproc
 641              	.LFE141:
 643              		.section	.text.SPI2_IRQHandler,"ax",%progbits
 644              		.align	1
 645              		.global	SPI2_IRQHandler
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu fpv4-sp-d16
 651              	SPI2_IRQHandler:
 652              	.LFB142:
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 19


 372:Src/stm32f3xx_it.c **** 
 373:Src/stm32f3xx_it.c **** /**
 374:Src/stm32f3xx_it.c ****  * @brief This function handles SPI2 global interrupt.
 375:Src/stm32f3xx_it.c ****  */
 376:Src/stm32f3xx_it.c **** void SPI2_IRQHandler(void)
 377:Src/stm32f3xx_it.c **** {
 653              		.loc 1 377 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 08B5     		push	{r3, lr}
 658              	.LCFI8:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 3, -8
 661              		.cfi_offset 14, -4
 378:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 0 */
 379:Src/stm32f3xx_it.c **** 
 380:Src/stm32f3xx_it.c ****   /* USER CODE END SPI2_IRQn 0 */
 381:Src/stm32f3xx_it.c ****   HAL_I2S_IRQHandler(&hi2s2);
 662              		.loc 1 381 3 view .LVU103
 663 0002 0248     		ldr	r0, .L54
 664 0004 FFF7FEFF 		bl	HAL_I2S_IRQHandler
 665              	.LVL16:
 382:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SPI2_IRQn 1 */
 383:Src/stm32f3xx_it.c **** 
 384:Src/stm32f3xx_it.c ****   /* USER CODE END SPI2_IRQn 1 */
 385:Src/stm32f3xx_it.c **** }
 666              		.loc 1 385 1 is_stmt 0 view .LVU104
 667 0008 08BD     		pop	{r3, pc}
 668              	.L55:
 669 000a 00BF     		.align	2
 670              	.L54:
 671 000c 00000000 		.word	hi2s2
 672              		.cfi_endproc
 673              	.LFE142:
 675              		.section	.text.USART2_IRQHandler,"ax",%progbits
 676              		.align	1
 677              		.global	USART2_IRQHandler
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu fpv4-sp-d16
 683              	USART2_IRQHandler:
 684              	.LFB143:
 386:Src/stm32f3xx_it.c **** 
 387:Src/stm32f3xx_it.c **** /**
 388:Src/stm32f3xx_it.c ****  * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXTI lin
 389:Src/stm32f3xx_it.c ****  */
 390:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 391:Src/stm32f3xx_it.c **** {
 685              		.loc 1 391 1 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 689 0000 08B5     		push	{r3, lr}
 690              	.LCFI9:
 691              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 20


 692              		.cfi_offset 3, -8
 693              		.cfi_offset 14, -4
 392:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 393:Src/stm32f3xx_it.c **** 
 394:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 395:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 694              		.loc 1 395 3 view .LVU106
 695 0002 0248     		ldr	r0, .L58
 696 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 697              	.LVL17:
 396:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 397:Src/stm32f3xx_it.c **** 
 398:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 399:Src/stm32f3xx_it.c **** }
 698              		.loc 1 399 1 is_stmt 0 view .LVU107
 699 0008 08BD     		pop	{r3, pc}
 700              	.L59:
 701 000a 00BF     		.align	2
 702              	.L58:
 703 000c 00000000 		.word	huart2
 704              		.cfi_endproc
 705              	.LFE143:
 707              		.global	cdctick
 708              		.global	up
 709              		.global	val
 710              		.global	t2cnt
 711              		.global	txidx
 712              		.global	t4tick
 713              		.global	skip
 714              		.global	SignalAvg
 715              		.global	NextBuf
 716              		.global	BBuf
 717              		.global	ABuf
 718              		.section	.bss.ABuf,"aw",%nobits
 719              		.align	2
 720              		.set	.LANCHOR1,. + 0
 723              	ABuf:
 724 0000 00000000 		.space	64
 724      00000000 
 724      00000000 
 724      00000000 
 724      00000000 
 725              		.section	.bss.BBuf,"aw",%nobits
 726              		.align	2
 727              		.set	.LANCHOR2,. + 0
 730              	BBuf:
 731 0000 00000000 		.space	64
 731      00000000 
 731      00000000 
 731      00000000 
 731      00000000 
 732              		.section	.bss.NextBuf,"aw",%nobits
 733              		.set	.LANCHOR0,. + 0
 736              	NextBuf:
 737 0000 00       		.space	1
 738              		.section	.bss.SignalAvg,"aw",%nobits
 739              		.align	2
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 21


 740              		.set	.LANCHOR4,. + 0
 743              	SignalAvg:
 744 0000 00000000 		.space	4
 745              		.section	.bss.cdctick,"aw",%nobits
 746              		.align	1
 749              	cdctick:
 750 0000 0000     		.space	2
 751              		.section	.bss.skip,"aw",%nobits
 752              		.set	.LANCHOR3,. + 0
 755              	skip:
 756 0000 00       		.space	1
 757              		.section	.bss.t2cnt,"aw",%nobits
 760              	t2cnt:
 761 0000 00       		.space	1
 762              		.section	.bss.t4tick,"aw",%nobits
 763              		.set	.LANCHOR6,. + 0
 766              	t4tick:
 767 0000 00       		.space	1
 768              		.section	.bss.txidx,"aw",%nobits
 769              		.set	.LANCHOR5,. + 0
 772              	txidx:
 773 0000 00       		.space	1
 774              		.section	.bss.up,"aw",%nobits
 777              	up:
 778 0000 00       		.space	1
 779              		.section	.bss.val,"aw",%nobits
 780              		.align	1
 783              	val:
 784 0000 0000     		.space	2
 785              		.text
 786              	.Letext0:
 787              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 788              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 789              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 790              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 791              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 792              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 793              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 794              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eabi
 795              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 796              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 797              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 798              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2s.h"
 799              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_pcd.h"
 800              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 801              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 802              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 803              		.file 18 "<built-in>"
 804              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:18     .text.NMI_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:40     .text.HardFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:47     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:64     .text.MemManage_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:71     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:88     .text.BusFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:112    .text.UsageFault_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:136    .text.SVC_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:143    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:156    .text.DebugMon_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:163    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:176    .text.PendSV_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:183    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:196    .text.SysTick_Handler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:203    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:223    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:230    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:250    .text.DMA1_Channel4_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:255    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:262    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:282    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:287    .text.USB_HP_CAN_TX_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:294    .text.USB_HP_CAN_TX_IRQHandler:00000000 USB_HP_CAN_TX_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:314    .text.USB_HP_CAN_TX_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:319    .text.USB_LP_CAN_RX0_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:326    .text.USB_LP_CAN_RX0_IRQHandler:00000000 USB_LP_CAN_RX0_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:346    .text.USB_LP_CAN_RX0_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:351    .text.TIM2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:358    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:412    .text.TIM2_IRQHandler:00000030 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:422    .text.TIM3_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:429    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:547    .text.TIM3_IRQHandler:00000088 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:561    .text.TIM4_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:568    .text.TIM4_IRQHandler:00000000 TIM4_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:634    .text.TIM4_IRQHandler:00000044 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:644    .text.SPI2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:651    .text.SPI2_IRQHandler:00000000 SPI2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:671    .text.SPI2_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:676    .text.USART2_IRQHandler:00000000 $t
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:683    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:703    .text.USART2_IRQHandler:0000000c $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:749    .bss.cdctick:00000000 cdctick
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:777    .bss.up:00000000 up
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:783    .bss.val:00000000 val
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:760    .bss.t2cnt:00000000 t2cnt
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:772    .bss.txidx:00000000 txidx
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:766    .bss.t4tick:00000000 t4tick
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:755    .bss.skip:00000000 skip
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:743    .bss.SignalAvg:00000000 SignalAvg
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:736    .bss.NextBuf:00000000 NextBuf
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:730    .bss.BBuf:00000000 BBuf
ARM GAS  C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s 			page 23


C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:723    .bss.ABuf:00000000 ABuf
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:719    .bss.ABuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:726    .bss.BBuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:737    .bss.NextBuf:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:739    .bss.SignalAvg:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:746    .bss.cdctick:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:756    .bss.skip:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:761    .bss.t2cnt:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:767    .bss.t4tick:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:773    .bss.txidx:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:778    .bss.up:00000000 $d
C:\Users\SHINRA~1\AppData\Local\Temp\cc58e8Hh.s:780    .bss.val:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi2_rx
hdma_spi2_tx
HAL_PCD_IRQHandler
hpcd_USB_FS
CDC_Transmit_FS
HAL_TIM_IRQHandler
TX_Flag
htim2
HAL_I2S_Receive_IT
BlinkLED
htim3
hi2s2
HAL_GPIO_ReadPin
JP2_MODE
JP1_MODE
htim4
HAL_I2S_IRQHandler
HAL_UART_IRQHandler
huart2
